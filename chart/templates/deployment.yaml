apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "workshop-app.fullname" . }}
  labels:
    {{- include "workshop-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "workshop-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "workshop-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "workshop-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "ghcr.io/aydevosotros/k8s-workshop-app:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["flask"]
          args: ["run", "--host=0.0.0.0", "--port=80"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: "/opt"
          env:
            - name: FLASK_APP
              value: "awesome_site"
            - name: FLASK_ENV
              value: "development"
            - name: ENVIRONMENT
              value: {{ .Values.workshop.environment }}
            - name: USER
              value: {{ .Values.workshop.user }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /hello
              port: http
          readinessProbe:
            httpGet:
              path: /hello
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{ if .Values.promtail.enabled }}
        - name: promptail-container
          image: grafana/promtail
          args:
            - -config.file=/etc/promtail/promtail-config.yaml
          volumeMounts:
            - name: promtail-config-{{ include "workshop-app.fullname" . }}
              mountPath: "/etc/promtail"
        {{ end }}
      {{ if .Values.promtail.enabled }}
      volumes:
        - name: promtail-config-{{ include "workshop-app.fullname" . }}
          configMap:
            name: promtail-config-{{ include "workshop-app.fullname" . }}
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
